#version 430
layout (local_size_x = 32, local_size_y = 32) in;
layout (rgba32f, binding = 0) uniform image2D img_output;
uniform sampler2D texture1;
uniform sampler2D texture2;
uniform int mode;

void main () {
	// base pixel color for image
	vec4 pixel = vec4 (1.0);
 
  	//gl_GlobalInvocationID = gl_WorkGroupID * gl_WorkGroupSize + gl_LocalInvocationID  
  	//gl_LocalInvocationIndex = gl_LocalInvocationID.z * gl_WorkGroupSize.y * gl_WorkGroupSize.x +
  	//						gl_LocalInvocationID.y * gl_WorkGroupSize.x+
  	//						gl_LocalInvocationID.x
  
  	
  	//output image dimensions
  	ivec2 dims = imageSize (img_output); 

	//x,y position in output image <0;dims.x> X <0;dims.y> 
  	ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
 
  	//xy coordinate in input texture
  	vec2 texCoords = vec2(pixelCoords.xy)/dims.xy;
  
	//set color of output pixel 
  	if (texCoords.x > texCoords.y)
  		pixel = texture2D(texture1, texCoords);
	else	  
  		pixel = texture2D(texture2, texCoords);  
 	
 	if (mode == 1)	 
 		pixel = texture2D(texture1, texCoords);
	if (mode == 2)	
		pixel = texture2D(texture2, texCoords);
 
  	// output to a specific pixel in the image
  	imageStore(img_output, pixelCoords, pixel);
}
