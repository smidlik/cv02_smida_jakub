#version 430
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1 ) in;

struct Struct{
	float key;	//key value used for sorting
	vec3 value;	//some value used as data
};

layout(binding = 0) buffer Input {
	Struct elements[];	//structure of input data
}input_data;

layout(binding = 1) buffer Output {
	Struct elements[];	//structure of output data
}output_data;

uniform int offset; //were to find second key value for comparison

void main () {
	uint index = gl_WorkGroupID.x;
	
	float key2, key1;
	key1 = input_data.elements[index].key; 
	key2 = input_data.elements[index + offset].key;
	
	//comparison to find the minimum of keys and update value
	if (key1 < key2){
		output_data.elements[index].key = key1; 
		output_data.elements[index].value = input_data.elements[index].value;
	}else {
		output_data.elements[index].key = key2; 
		output_data.elements[index].value = input_data.elements[index + offset].value; 
	}
 }
